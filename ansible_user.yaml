---
- name: Copy SSH public key to remote user
  hosts: all
  become: yes
  vars:
    ansible_user: "fsuser"  # SSH username
    ansible_ssh_pass: "f$us#r@098"  # SSH password
    ansible_ssh_extra_args: "-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"

  tasks:
    - name: Ensure .ssh directory exists
      file:
        path: "/home/{{ ansible_user }}/.ssh"
        state: directory
        mode: '0700'
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    - name: Copy the SSH public key to the remote user's authorized_keys
      authorized_key:
        user: "{{ ansible_user }}"
        state: present
        key: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC3RWItgvuZK3rVgONZXQ3zlNF1bdn4YfR67RiUVONH9UU9B6+YwCou94y5SOZ+QTR2dWrjS6k8Yh1UDrFKjd9J8dHR4F9hcxw8O5ilfPzhttgDWoMu0Ex+HHMgy+7eOvtZAqqbeLpRocmw/LOJSDcXlRPq/ZTQvvkThjyYjM18TnhURbzDHyUB2cTmhFy8HMpioPaxdYmr7J3brKZoxn7utWayeMDEwqY47ot+exFohf0ZkAHLp5shcdNexlRgVkf2p6gMwsc/KP9tjaOeeR9QKzWYSCROTUUFZMecHnVpaoieDIGmRO5yP5t0hj7HWI0xadm/Nw/bXrtnBMToiEJw0u3H/v6vpBh80oO0xnY4xuOxZAX7TOjnjOKkUvAHEHv4vASw1F2wowFYysN3BIlWmOtP4HJxdi8VJqXlIVH8tO4v/yE8dYTm5KVoohKMX0YiHvxKWgtrF907WBEINOnLVlN0E0GjvU3fiDaSkpSfyQolgvtMhdj2/07IeAXwOuLhd4ZWkdxy67iJ5Qdyc42JeTG1sx1sUUAF4BZNf+s64aK9jsky2hX9yxKhMcmydsS3bLYHCsaEiKNyuVcC2nyWdOj6xqKlsLsmayJer3F4VjwxelSNp1MzArvXz+vds2DXk5+wT0WavkmaSMihnblTSyTli9TpKm2LOFUYfnAsgw== fsuser@FS-SRV-IN-04"
        path: "/home/{{ ansible_user }}/.ssh/authorized_keys"
        manage_dir: yes

    - name: Check if authorized_keys file exists
      stat:
        path: "/home/{{ ansible_user }}/.ssh/authorized_keys"
      register: auth_key_stat

    - name: Show the result of stat
      debug:
        var: auth_key_stat

    - name: Debug the contents of authorized_keys
      command: cat /home/{{ ansible_user }}/.ssh/authorized_keys
      register: authorized_keys_contents
      when: auth_key_stat.stat.exists
      become: yes

    - name: Show contents of authorized_keys
      debug:
        var: authorized_keys_contents.stdout
      when: auth_key_stat.stat.exists

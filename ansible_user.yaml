---
- name: Copy SSH public key to remote user
  hosts: all
  become: yes
  vars:
    ansible_user: "fsuser"  # SSH username
    ansible_ssh_pass: "f$us#r@098"  # SSH password
    #ansible_ssh_extra_args: "-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"

  tasks:
    - name: Ensure .ssh directory exists
      file:
        path: "/home/{{ ansible_user }}/.ssh"
        state: directory
        mode: '0700'
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    - name: Copy the SSH public key to the remote user's authorized_keys
      authorized_key:
        user: "{{ ansible_user }}"
        state: present
        key: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCYRVadvilhikBIJZ14OQiMB/nts5db3kXSlOBfl2z49gq1PnGjBLFG5/4m3qTlfPLe+R00R6fMIgFqh75t0MMpCDrCoP+QffzijkecBhfBAyi7/V+BuoI7xcC7B8om2MVXqMB10WiTng20vzN2sio8T/WovY1MuWtc3PyZrNa18CzV3lH+RGPCJhIelCot6KKD8dyZaiWfQ1Las9w+9aMFykSBC/uG3jMOVmOmXXYCGfRN285q6JkTP3SA/3BOar4lRWFXtde9+x3BEVqR0CxfpNHl4gLXlkbqAD0L5pnJ0FCNtzMhPLvXRuiKFpozoMs+FsffQdIknb+bKoJBEunT fsuser@FS-DEV-L-IN-045"
        path: "/home/{{ ansible_user }}/.ssh/authorized_keys"
        manage_dir: yes

    - name: Check if authorized_keys file exists
      stat:
        path: "/home/{{ ansible_user }}/.ssh/authorized_keys"
      register: auth_key_stat

    - name: Show the result of stat
      debug:
        var: auth_key_stat

    - name: Debug the contents of authorized_keys
      command: cat /home/{{ ansible_user }}/.ssh/authorized_keys
      register: authorized_keys_contents
      when: auth_key_stat.stat.exists
      become: yes

    - name: Show contents of authorized_keys
      debug:
        var: authorized_keys_contents.stdout
      when: auth_key_stat.stat.exists
